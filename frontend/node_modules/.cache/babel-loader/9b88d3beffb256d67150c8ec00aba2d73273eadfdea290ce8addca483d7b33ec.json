{"ast":null,"code":"var _jsxFileName = \"/home/acmarchiori/Desafios-Tecnicos/desafio-tecnico-uol/test-fullstack/frontend/src/components/userList/UserList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getAllClients } from '../../services/api';\nimport './UserList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/**\n * Componente responsável por exibir a lista de clientes.\n */\nconst UserList = () => {\n  _s();\n  const [clients, setClients] = useState([]);\n  useEffect(() => {\n    /**\n     * Função assíncrona para buscar os clientes da API e atualizar o estado.\n     */\n    const fetchClients = async () => {\n      try {\n        const response = await getAllClients();\n        setClients(response);\n      } catch (error) {\n        console.error('Error fetching clients:', error);\n      }\n    };\n\n    // Chamada da função de busca de clientes ao montar o componente\n    fetchClients().catch(() => {});\n  }, []);\n\n  /**\n   * Função para determinar a classe de cor com base no status do cliente.\n   * @param status - O status do cliente.\n   * @returns A classe CSS correspondente à cor do status.\n   */\n  const getStatusColor = status => {\n    switch (status) {\n      case 'Ativo':\n        return 'active';\n      case 'Inativo':\n        return 'inactive';\n      case 'Aguardando ativação':\n        return 'awaiting-activation';\n      case 'Desativado':\n        return 'disabled';\n      default:\n        return '';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: clients.map(client => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"client-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"first-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"strong\",\n          \"data-testid\": \"cliente\",\n          children: client.nome\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: client.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"second-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"strong\",\n          children: client.cpf\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: client.telefone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"third-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `status-dot ${getStatusColor(client.status)}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: client.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fourth-column\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/clientes/${client.id}`,\n          className: \"edit-button\",\n          children: \"Editar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, client.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(UserList, \"cUQn5teewQOIEjPDAOj81V47VgI=\");\n_c = UserList;\nexport default UserList;\nvar _c;\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"names":["React","useEffect","useState","Link","getAllClients","jsxDEV","_jsxDEV","UserList","_s","clients","setClients","fetchClients","response","error","console","catch","getStatusColor","status","children","map","client","className","nome","fileName","_jsxFileName","lineNumber","columnNumber","email","cpf","telefone","to","id","_c","$RefreshReg$"],"sources":["/home/acmarchiori/Desafios-Tecnicos/desafio-tecnico-uol/test-fullstack/frontend/src/components/userList/UserList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { getAllClients } from '../../services/api'\nimport './UserList.css'\n\ninterface Client {\n  id?: number\n  nome: string\n  email: string\n  cpf: string\n  telefone: string\n  status: string\n}\n\n/**\n * Componente responsável por exibir a lista de clientes.\n */\nconst UserList: React.FC = () => {\n  const [clients, setClients] = useState<Client[]>([])\n\n  useEffect(() => {\n    /**\n     * Função assíncrona para buscar os clientes da API e atualizar o estado.\n     */\n    const fetchClients = async (): Promise<void> => {\n      try {\n        const response = await getAllClients()\n        setClients(response)\n      } catch (error) {\n        console.error('Error fetching clients:', error)\n      }\n    }\n\n    // Chamada da função de busca de clientes ao montar o componente\n    fetchClients().catch(() => {})\n  }, [])\n\n  /**\n   * Função para determinar a classe de cor com base no status do cliente.\n   * @param status - O status do cliente.\n   * @returns A classe CSS correspondente à cor do status.\n   */\n  const getStatusColor = (status: string): string => {\n    switch (status) {\n      case 'Ativo':\n        return 'active'\n      case 'Inativo':\n        return 'inactive'\n      case 'Aguardando ativação':\n        return 'awaiting-activation'\n      case 'Desativado':\n        return 'disabled'\n      default:\n        return ''\n    }\n  }\n\n  return (\n    <div>\n      {/* Mapeia cada cliente para exibir suas informações */}\n      {clients.map(client => (\n        <div key={client.id} className='client-info'>\n          <div className='first-column'>\n            <span className='strong' data-testid=\"cliente\">{client.nome}</span>\n            <br />\n            <span>{client.email}</span>\n          </div>\n          <div className='second-column'>\n            <span className='strong'>{client.cpf}</span>\n            <br />\n            <span>{client.telefone}</span>\n          </div>\n          <div className=\"third-column\">\n            {/* Exibe um ponto de status colorido com base no status do cliente */}\n            <span className={`status-dot ${getStatusColor(client.status)}`}></span>\n            <span>{client.status}</span>\n          </div>\n          <div className='fourth-column'>\n            {/* Link para a página de edição do cliente */}\n            <Link to={`/clientes/${client.id}`} className=\"edit-button\">Editar</Link>\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default UserList\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}