{"ast":null,"code":"var _jsxFileName = \"/home/acmarchiori/Desafios-Tecnicos/desafio-tecnico-uol/test-fullstack/frontend/src/components/userEditForm/UserEditForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport InputMask from 'react-input-mask';\nimport { getClientById, createClient, updateClient } from '../../services/api';\nimport { schema, formatarTelefone } from '../../services/schema';\nimport './UserEditForm.css';\n\n/**\n * Componente responsável pelo formulário de edição e criação de clientes.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserEditForm = () => {\n  _s();\n  var _formik$errors, _formik$errors2, _formik$errors3, _formik$errors4, _formik$touched, _formik$errors5;\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [clientData, setClientData] = useState({\n    nome: '',\n    email: '',\n    cpf: '',\n    telefone: '',\n    status: ''\n  });\n  useEffect(() => {\n    /**\n     * Função assíncrona para buscar os dados do cliente pelo ID.\n     */\n    const fetchData = async () => {\n      try {\n        if (id !== undefined && id !== null && id !== '') {\n          const response = await getClientById(Number(id));\n          setClientData(response);\n        }\n      } catch (error) {\n        console.error('Erro ao buscar cliente:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData().catch(() => {});\n  }, [id]);\n\n  /**\n   * Formik hook para controle do formulário.\n   */\n  const formik = useFormik({\n    initialValues: clientData,\n    validationSchema: schema,\n    onSubmit: async values => {\n      try {\n        if (id !== undefined && id !== null && id !== '') {\n          await updateClient(Number(id), values);\n          alert('Cliente atualizado com sucesso!');\n        } else {\n          await createClient(values);\n          alert('Cliente cadastrado com sucesso!');\n        }\n      } catch (error) {\n        const errorMessage = error.response.data !== undefined ? error.response.data : 'Erro desconhecido';\n        alert(`Erro ${error.response.status}: ${errorMessage}`);\n      }\n    }\n  });\n\n  /**\n  * Hook useEffect utilizado para atualizar os valores do formulário do usuário.\n  * Este hook é acionado sempre que há uma mudança nos dados do cliente (`clientData`) ou\n  * quando a função `formik.setValues` é alterada.\n  */\n  useEffect(() => {\n    // Função assíncrona para configurar os valores do formulário com os dados do cliente\n    const setFormValues = async () => {\n      // Verifica se os dados do cliente são válidos\n      if (clientData !== null && clientData !== undefined) {\n        // Define os valores do formulário com os dados do cliente\n        await formik.setValues(clientData);\n      }\n    };\n\n    // Invoca a função para definir os valores do formulário\n    void (async () => {\n      await setFormValues();\n    })();\n  }, [clientData, formik.setValues]); // Dependências do hook useEffect\n\n  // Renderiza uma mensagem de carregamento enquanto os dados estão sendo buscados\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Renderiza o formulário de edição ou criação de usuário\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-edit-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: id != null ? 'Editar Usuário' : 'Novo Usuário'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Informe os campos a seguir para \", id != null ? 'editar um usuário:' : 'criar um novo usuário:']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [((_formik$errors = formik.errors) === null || _formik$errors === void 0 ? void 0 : _formik$errors.nome) !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: formik.errors.nome\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 47\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"nome\",\n          name: \"nome\",\n          placeholder: \"Nome\",\n          minLength: 3,\n          required: true,\n          value: formik.values.nome,\n          onChange: formik.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [((_formik$errors2 = formik.errors) === null || _formik$errors2 === void 0 ? void 0 : _formik$errors2.email) !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: formik.errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 48\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          placeholder: \"E-mail\",\n          required: true,\n          value: formik.values.email,\n          onChange: formik.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [((_formik$errors3 = formik.errors) === null || _formik$errors3 === void 0 ? void 0 : _formik$errors3.cpf) !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: formik.errors.cpf\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 46\n        }, this), /*#__PURE__*/_jsxDEV(InputMask, {\n          \"data-testid\": \"cpf\",\n          mask: \"999.999.999-99\",\n          maskChar: \"\",\n          type: \"text\",\n          id: \"cpf\",\n          name: \"cpf\",\n          placeholder: \"CPF\",\n          required: true,\n          value: formik.values.cpf,\n          onChange: formik.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [((_formik$errors4 = formik.errors) === null || _formik$errors4 === void 0 ? void 0 : _formik$errors4.telefone) !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: formik.errors.telefone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 51\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          id: \"telefone\",\n          maxLength: 14,\n          name: \"telefone\",\n          placeholder: \"Telefone\",\n          required: true,\n          value: formatarTelefone(formik.values.telefone),\n          onChange: event => {\n            const formattedTelefone = formatarTelefone(event.target.value);\n            void formik.setFieldValue('telefone', formattedTelefone);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [((_formik$touched = formik.touched) === null || _formik$touched === void 0 ? void 0 : _formik$touched.status) !== undefined && ((_formik$errors5 = formik.errors) === null || _formik$errors5 === void 0 ? void 0 : _formik$errors5.status) !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: formik.errors.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 89\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"status\",\n          name: \"status\",\n          required: true,\n          value: formik.values.status,\n          onChange: formik.handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            selected: true,\n            hidden: true,\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Ativo\",\n            children: \"Ativo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Inativo\",\n            children: \"Inativo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Aguardando ativa\\xE7\\xE3o\",\n            children: \"Aguardando ativa\\xE7\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Desativado\",\n            children: \"Desativado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-create\",\n          type: \"submit\",\n          disabled: !formik.isValid,\n          children: id != null ? 'Editar' : 'Criar'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-back\",\n          type: \"button\",\n          onClick: () => {\n            history.push('/');\n          },\n          children: \"Voltar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 3\n  }, this);\n};\n_s(UserEditForm, \"hcItMmIY242vEuoqfU/ojaoIqno=\", false, function () {\n  return [useHistory, useParams, useFormik];\n});\n_c = UserEditForm;\nexport default UserEditForm;\nvar _c;\n$RefreshReg$(_c, \"UserEditForm\");","map":{"version":3,"names":["React","useEffect","useState","useHistory","useParams","useFormik","InputMask","getClientById","createClient","updateClient","schema","formatarTelefone","jsxDEV","_jsxDEV","UserEditForm","_s","_formik$errors","_formik$errors2","_formik$errors3","_formik$errors4","_formik$touched","_formik$errors5","history","id","loading","setLoading","clientData","setClientData","nome","email","cpf","telefone","status","fetchData","undefined","response","Number","error","console","catch","formik","initialValues","validationSchema","onSubmit","values","alert","errorMessage","data","setFormValues","setValues","children","fileName","_jsxFileName","lineNumber","columnNumber","className","handleSubmit","errors","type","name","placeholder","minLength","required","value","onChange","handleChange","mask","maskChar","maxLength","event","formattedTelefone","target","setFieldValue","touched","disabled","selected","hidden","isValid","onClick","push","_c","$RefreshReg$"],"sources":["/home/acmarchiori/Desafios-Tecnicos/desafio-tecnico-uol/test-fullstack/frontend/src/components/userEditForm/UserEditForm.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { useFormik } from 'formik'\nimport InputMask from 'react-input-mask'\nimport { getClientById, createClient, updateClient } from '../../services/api'\nimport { schema, formatarTelefone } from '../../services/schema'\nimport { Client, ClientStatus } from '../../services/types' \nimport './UserEditForm.css'\n\n/**\n * Componente responsável pelo formulário de edição e criação de clientes.\n */\nconst UserEditForm: React.FC = () => {\n  const history = useHistory()\n  const { id } = useParams<{ id: string }>()\n\n  const [loading, setLoading] = useState(true)\n  const [clientData, setClientData] = useState<Client>({\n    nome: '',\n    email: '',\n    cpf: '',\n    telefone: '',\n    status: ''\n  })\n\n  useEffect(() => {\n    /**\n     * Função assíncrona para buscar os dados do cliente pelo ID.\n     */\n    const fetchData = async (): Promise<void> => {\n      try {\n        if (id !== undefined && id !== null && id !== '') {\n          const response = await getClientById(Number(id))\n          setClientData(response)\n        }\n      } catch (error) {\n        console.error('Erro ao buscar cliente:', error)\n      } finally {\n        setLoading(false)\n      }\n    }\n    fetchData().catch(() => {})\n  }, [id])\n\n  /**\n   * Formik hook para controle do formulário.\n   */\n  const formik = useFormik({\n    initialValues: clientData,\n    validationSchema: schema,\n    onSubmit: async (values) => {\n      try {\n        if (id !== undefined && id !== null && id !== '') {\n          await updateClient(Number(id), values)\n          alert('Cliente atualizado com sucesso!')\n        } else {\n          await createClient(values)\n          alert('Cliente cadastrado com sucesso!')\n        }\n      } catch (error: any) {\n        const errorMessage = error.response.data !== undefined ? error.response.data : 'Erro desconhecido'\n        alert(`Erro ${error.response.status}: ${errorMessage}`)\n      }\n    }\n  })\n\n  /**\n * Hook useEffect utilizado para atualizar os valores do formulário do usuário.\n * Este hook é acionado sempre que há uma mudança nos dados do cliente (`clientData`) ou\n * quando a função `formik.setValues` é alterada.\n */\n  useEffect(() => {\n  // Função assíncrona para configurar os valores do formulário com os dados do cliente\n    const setFormValues = async (): Promise<void> => {\n    // Verifica se os dados do cliente são válidos\n      if (clientData !== null && clientData !== undefined) {\n      // Define os valores do formulário com os dados do cliente\n        await formik.setValues(clientData)\n      }\n    }\n\n    // Invoca a função para definir os valores do formulário\n    void (async () => {\n      await setFormValues()\n    })()\n  }, [clientData, formik.setValues]) // Dependências do hook useEffect\n\n  // Renderiza uma mensagem de carregamento enquanto os dados estão sendo buscados\n  if (loading) {\n    return <div>Carregando...</div>\n  }\n\n  // Renderiza o formulário de edição ou criação de usuário\n  return (\n  <div className='user-edit-form'>\n    {/* Título do formulário: \"Editar Usuário\" se houver um ID definido, senão \"Novo Usuário\" */}\n    <h2>{id != null ? 'Editar Usuário' : 'Novo Usuário'}</h2>\n    {/* Descrição do formulário: \"editar um usuário\" se houver um ID definido, senão \"criar um novo usuário\" */}\n    <p>Informe os campos a seguir para {id != null ? 'editar um usuário:' : 'criar um novo usuário:'}</p>\n    {/* Formulário de entrada de dados do usuário */}\n    <form onSubmit={formik.handleSubmit}>\n      {/* Campo de entrada para o nome do usuário */}\n      <div>\n        {/* Renderiza uma mensagem de erro se o campo foi tocado e possui erros */}\n        {formik.errors?.nome !== undefined && <div className='error-message'>{formik.errors.nome}</div>}\n        {/* Input de texto para o nome do usuário */}\n        <input\n          type=\"text\"\n          id=\"nome\"\n          name='nome'\n          placeholder='Nome'\n          minLength={3}\n          required\n          value={formik.values.nome}\n          onChange={formik.handleChange}\n        />\n      </div>\n      {/* Campo de entrada para o e-mail do usuário */}\n      <div>\n        {/* Renderiza uma mensagem de erro se o campo foi tocado e possui erros */}\n        {formik.errors?.email !== undefined && <div className='error-message'>{formik.errors.email}</div>}\n        {/* Input de e-mail para o e-mail do usuário */}\n        <input\n          type=\"email\"\n          id=\"email\"\n          name=\"email\"\n          placeholder='E-mail'\n          required\n          value={formik.values.email}\n          onChange={formik.handleChange}\n        />\n      </div>\n      {/* Campo de entrada para o CPF do usuário */}\n      <div>\n        {/* Renderiza uma mensagem de erro se o campo foi tocado e possui erros */}\n        {formik.errors?.cpf !== undefined && <div className='error-message'>{formik.errors.cpf}</div>}\n        {/* Input de máscara para o CPF do usuário */}\n        <InputMask\n          data-testid=\"cpf\"\n          mask=\"999.999.999-99\"\n          maskChar=\"\"\n          type=\"text\"\n          id=\"cpf\"\n          name=\"cpf\"\n          placeholder='CPF'\n          required\n          value={formik.values.cpf}\n          onChange={formik.handleChange}\n        />\n      </div>\n      {/* Campo de entrada para o telefone do usuário */}\n      <div>\n        {/* Renderiza uma mensagem de erro se o campo foi tocado e possui erros */}\n        {formik.errors?.telefone !== undefined && <div className='error-message'>{formik.errors.telefone}</div>}\n        {/* Input de máscara para o telefone do usuário */}\n        <input\n          type=\"tel\"\n          id=\"telefone\"\n          maxLength={14}\n          name=\"telefone\"\n          placeholder='Telefone'\n          required\n          value={formatarTelefone(formik.values.telefone)}\n          onChange={(event) => {\n            const formattedTelefone = formatarTelefone(event.target.value)\n            void formik.setFieldValue('telefone', formattedTelefone)\n          }}\n        />\n      </div>\n      {/* Campo de seleção para o status do usuário */}\n      <div>\n        {/* Renderiza uma mensagem de erro se o campo foi tocado e possui erros */}\n        {formik.touched?.status !== undefined && formik.errors?.status !== undefined && <div className='error-message'>{formik.errors.status}</div>}\n        {/* Select para o status do usuário */}\n        <select\n          id=\"status\"\n          name=\"status\"\n          required\n          value={formik.values.status}\n          onChange={formik.handleChange}\n        >\n          <option value=\"\" disabled selected hidden>Status</option>\n          <option value=\"Ativo\">Ativo</option>\n          <option value=\"Inativo\">Inativo</option>\n          <option value=\"Aguardando ativação\">Aguardando ativação</option>\n          <option value=\"Desativado\">Desativado</option>\n        </select>\n      </div>\n      {/* Botões para enviar ou voltar */}\n      <div className=\"button-container\">\n        {/* Botão para enviar o formulário */}\n        <button className='button-create' type=\"submit\" disabled={!formik.isValid}>{id != null ? 'Editar' : 'Criar'}</button>\n        {/* Botão para voltar */}\n        <button className='button-back' type=\"button\" onClick={() => { history.push('/') }}>Voltar</button>\n      </div>\n    </form>\n  </div>\n  )\n}\n\nexport default UserEditForm\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}